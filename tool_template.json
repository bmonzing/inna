[{"id":"tool_template","user_id":"1780e9c3-e0be-4301-bcb2-392c0d9da061","name":"tool_template","content":"import os\nimport requests\nfrom datetime import datetime\nfrom pydantic import BaseModel, Field\n\n\nclass Tools:\n    def __init__(self):\n        pass\n\n    # Add your custom tools using pure Python code here, make sure to add type hints and descriptions\n\n    def get_user_name_and_email_and_id(self, __user__: dict = {}) -> str:\n        \"\"\"\n        Get the user name, Email and ID from the user object.\n        \"\"\"\n\n        # Do not include a descrption for __user__ as it should not be shown in the tool's specification\n        # The session user object will be passed as a parameter when the function is called\n\n        print(__user__)\n        result = \"\"\n\n        if \"name\" in __user__:\n            result += f\"User: {__user__['name']}\"\n        if \"id\" in __user__:\n            result += f\" (ID: {__user__['id']})\"\n        if \"email\" in __user__:\n            result += f\" (Email: {__user__['email']})\"\n\n        if result == \"\":\n            result = \"User: Unknown\"\n\n        return result\n\n    def get_current_time(self) -> str:\n        \"\"\"\n        Get the current time in a more human-readable format.\n        \"\"\"\n\n        now = datetime.now()\n        current_time = now.strftime(\"%I:%M:%S %p\")  # Using 12-hour format with AM/PM\n        current_date = now.strftime(\n            \"%A, %B %d, %Y\"\n        )  # Full weekday, month name, day, and year\n\n        return f\"Current Date and Time = {current_date}, {current_time}\"\n\n    def calculator(\n        self,\n        equation: str = Field(\n            ..., description=\"The mathematical equation to calculate.\"\n        ),\n    ) -> str:\n        \"\"\"\n        Calculate the result of an equation.\n        \"\"\"\n\n        # Avoid using eval in production code\n        # https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html\n        try:\n            result = eval(equation)\n            return f\"{equation} = {result}\"\n        except Exception as e:\n            print(e)\n            return \"Invalid equation\"\n\n    def get_current_weather(\n        self,\n        city: str = Field(\n            \"New York, NY\", description=\"Get the current weather for a given city.\"\n        ),\n    ) -> str:\n        \"\"\"\n        Get the current weather for a given city.\n        \"\"\"\n\n        api_key = os.getenv(\"OPENWEATHER_API_KEY\")\n        if not api_key:\n            return (\n                \"API key is not set in the environment variable 'OPENWEATHER_API_KEY'.\"\n            )\n\n        base_url = \"http://api.openweathermap.org/data/2.5/weather\"\n        params = {\n            \"q\": city,\n            \"appid\": api_key,\n            \"units\": \"metric\",  # Optional: Use 'imperial' for Fahrenheit\n        }\n\n        try:\n            response = requests.get(base_url, params=params)\n            response.raise_for_status()  # Raise HTTPError for bad responses (4xx and 5xx)\n            data = response.json()\n\n            if data.get(\"cod\") != 200:\n                return f\"Error fetching weather data: {data.get('message')}\"\n\n            weather_description = data[\"weather\"][0][\"description\"]\n            temperature = data[\"main\"][\"temp\"]\n            humidity = data[\"main\"][\"humidity\"]\n            wind_speed = data[\"wind\"][\"speed\"]\n\n            return f\"Weather in {city}: {temperature}Â°C\"\n        except requests.RequestException as e:\n            return f\"Error fetching weather data: {str(e)}\"\n","specs":[{"name":"calculator","description":"Calculate the result of an equation.","parameters":{"properties":{"equation":{"description":"The mathematical equation to calculate.","type":"string"}},"required":["equation"],"type":"object"}},{"name":"get_current_time","description":"Get the current time in a more human-readable format.","parameters":{"properties":{},"type":"object"}},{"name":"get_current_weather","description":"Get the current weather for a given city.","parameters":{"properties":{"city":{"default":"New York, NY","description":"Get the current weather for a given city.","type":"string"}},"type":"object"}},{"name":"get_user_name_and_email_and_id","description":"Get the user name, Email and ID from the user object.","parameters":{"properties":{},"type":"object"}}],"meta":{"description":"This is an Open WebUI tool template","manifest":{}},"access_control":{},"updated_at":1761109985,"created_at":1761109985}]